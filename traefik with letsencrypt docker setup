1. Create a network for traefik to interact with other guests on

    "docker network create web"

2. Make a working directory and cd to it, I chose "mkdir -p /srv/traefik" and chowned it
3. create a docker-compose.yml, note that traefik.toml is located in my cifs mount

    version: '3'

    services:
      reverse-proxy:
        image: traefik
        command: --api --docker
        restart: always
        ports:
          - 8080:8080
          - 80:80
          - 443:443
        volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - /srv/datalink/Traefik/traefik.toml:/traefik.toml
         - /srv/traefik/acme.json:/acme.json
        container_name: traefik
        labels:
          - "traefik.enable=false"

    networks:
      default:
        external:
          name: "web"

4. Create acme.json and chmod 0600
5. Create traefik.toml and put in following config

    debug = false

    logLevel = "ERROR"
    defaultEntryPoints = ["https","http"]

    [entryPoints]
      [entryPoints.http]
      address = ":80"
        [entryPoints.http.redirect]
        entryPoint = "https"
      [entryPoints.https]
      address = ":443"
      [entryPoints.https.tls]

    [retry]

    [docker]
    endpoint = "unix:///var/run/docker.sock"
    domain = "mydomain.tld"
    watch = true
    exposedByDefault = false

    [acme]
    email = "my_email@awesome.com"
    storage = "acme.json"
    entryPoint = "https"
    onHostRule = true
      [acme.httpChallenge]
      entryPoint = "http"
    
    # This next section creates front ends and and backends for my non-docker hosts
    [file]

    [backends]
      [backends.backend1]
        [backends.backend1.servers]
          [backends.backend1.servers.server0]
            url = "http://ip_address:port#"

      [backends.backend2]
        [backends.backend2.servers]
          [backends.backend2.servers.server0]
            url = "http://ip_address:port#"

    [frontends]
      [frontends.frontend1]
        entryPoints = ["http", "https"]
        backend = "backend1"
        passHostHeader = true
        [frontends.frontend1.routes]
          [frontends.frontend1.routes.route0]
            rule = "Host:host.domain.tld"

      [frontends.frontend2]
        entryPoints = ["http", "https"]
        backend = "backend2"
        passHostHeader = true
        [frontends.frontend2.routes]
          [frontends.frontend2.routes.route0]
            rule = "Host:host.domain.tld"
    
6. Run docker-compose up -d
